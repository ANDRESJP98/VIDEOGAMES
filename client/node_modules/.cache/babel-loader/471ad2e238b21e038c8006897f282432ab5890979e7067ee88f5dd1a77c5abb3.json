{"ast":null,"code":"import axios from 'axios';\nconst {\n  API_KEY\n} = process.env;\nexport const GET_VIDEOGAMES = \"GET_VIDEOGAMES\";\nexport const FILTER_BY_STATUS = \"FILTER_BY_STATUS\";\nexport const FILTER_CREATED = \"FILTER_CREATED\";\nexport const ORDER_BY_NAME = \"ORDER_BY_NAME\";\nexport const GET_NAME_VIDEOGAMES = \"GET_NAME_VIDEOGAMES\";\nexport const getVideogames = () => {\n  return async function (dispatch) {\n    const infoApi = await axios.get(`https://api.rawg.io/api/games?key=b3be65e7205e49e8946934e7e1953920&page_size=100`);\n    const allVideogames = infoApi.data.results;\n    const infoApiId = allVideogames.map(elem => axios.get(`https://api.rawg.io/api/games/${elem.id}?key=b3be65e7205e49e8946934e7e1953920`));\n    const infoApiAll = await axios.all(infoApiId);\n    const infoApiresponses = infoApiAll.map(response => {\n      var _response$data$platfo, _response$data$genres;\n      const {\n        id,\n        name,\n        description,\n        background_image,\n        rating,\n        released\n      } = response.data;\n      const platforms = ((_response$data$platfo = response.data.platforms) === null || _response$data$platfo === void 0 ? void 0 : _response$data$platfo.map(platform => platform.platform.name)).join(\", \");\n      const genres = ((_response$data$genres = response.data.genres) === null || _response$data$genres === void 0 ? void 0 : _response$data$genres.map(genre => genre.name)).join(\", \");\n      return {\n        id,\n        name,\n        background_image,\n        description: description.replaceAll(/<[^>]+>/g, \" \"),\n        genres: genres,\n        platforms: platforms,\n        rating,\n        released\n      };\n    });\n    dispatch({\n      type: GET_VIDEOGAMES,\n      payload: infoApiresponses\n    });\n  };\n};\nexport const getNameVideogames = name => {\n  return async function (dispatch) {\n    try {\n      const infoApi = await axios.get(`https://api.rawg.io/api/games?name=` + name + `&key=b3be65e7205e49e8946934e7e1953920&page_size=100`);\n      const allVideogames = infoApi.data.results;\n      const infoApiId = allVideogames.map(elem => axios.get(`https://api.rawg.io/api/games?name=` + name + `${elem.name}&key=b3be65e7205e49e8946934e7e1953920`));\n      const infoApiAll = await axios.all(infoApiId);\n      const infoApiresponses = infoApiAll.map(response => {\n        const {\n          id,\n          name,\n          description,\n          background_image,\n          rating,\n          released\n        } = response.data;\n        /*const platforms = (response.data.platforms?.map(platform=>platform.platform.name)).join(\", \");\r\n        const genres = (response.data.genres?.map(genre=>genre.name)).join(\", \");*/\n        return {\n          id,\n          name,\n          background_image,\n          description: description.replaceAll(/<[^>]+>/g, \" \"),\n          genres: genres,\n          platforms: platforms,\n          rating,\n          released\n        };\n      });\n      dispatch({\n        type: GET_NAME_VIDEOGAMES,\n        payload: infoApiresponses\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const orderByName = payload => {\n  return {\n    type: ORDER_BY_NAME,\n    payload\n  };\n};\nexport const filterByStatus = payload => {\n  return {\n    type: FILTER_BY_STATUS,\n    payload\n  };\n};\nexport const filterCreated = payload => {\n  return {\n    type: FILTER_CREATED,\n    payload\n  };\n};","map":{"version":3,"names":["axios","API_KEY","process","env","GET_VIDEOGAMES","FILTER_BY_STATUS","FILTER_CREATED","ORDER_BY_NAME","GET_NAME_VIDEOGAMES","getVideogames","dispatch","infoApi","get","allVideogames","data","results","infoApiId","map","elem","id","infoApiAll","all","infoApiresponses","response","_response$data$platfo","_response$data$genres","name","description","background_image","rating","released","platforms","platform","join","genres","genre","replaceAll","type","payload","getNameVideogames","error","console","log","orderByName","filterByStatus","filterCreated"],"sources":["C:/Users/ACER/Desktop/VIDEOGAMES/client/src/REDUX/actions.js"],"sourcesContent":["import axios from 'axios';\r\nconst {API_KEY} = process.env;\r\n\r\nexport const GET_VIDEOGAMES =\"GET_VIDEOGAMES\";\r\nexport const FILTER_BY_STATUS =\"FILTER_BY_STATUS\";\r\nexport const FILTER_CREATED =\"FILTER_CREATED\";\r\nexport const ORDER_BY_NAME=\"ORDER_BY_NAME\";\r\nexport const GET_NAME_VIDEOGAMES=\"GET_NAME_VIDEOGAMES\";\r\nexport const getVideogames=()=>{\r\n    return async function (dispatch){\r\n        const infoApi =await axios.get(`https://api.rawg.io/api/games?key=b3be65e7205e49e8946934e7e1953920&page_size=100`);\r\n    const allVideogames=infoApi.data.results;\r\n    const infoApiId =allVideogames.map(elem => axios.get(`https://api.rawg.io/api/games/${elem.id}?key=b3be65e7205e49e8946934e7e1953920`));\r\n    const infoApiAll =await axios.all(infoApiId);\r\n    const infoApiresponses =infoApiAll.map(response=>{\r\n        const {id, name, description, background_image, rating, released}=response.data;\r\n        const platforms = (response.data.platforms?.map(platform=>platform.platform.name)).join(\", \");\r\n        const genres = (response.data.genres?.map(genre=>genre.name)).join(\", \");\r\n        return {\r\n            id,\r\n            name, \r\n            background_image, \r\n            description:description.replaceAll(/<[^>]+>/g, \" \"),\r\n            genres:genres,\r\n            platforms:platforms,\r\n            rating,\r\n            released\r\n        };\r\n    });\r\n    dispatch({type:GET_VIDEOGAMES, payload:infoApiresponses});\r\n    }\r\n}\r\nexport const getNameVideogames=(name)=>{\r\n    return async function (dispatch){\r\n    try{\r\n        const infoApi =await axios.get(`https://api.rawg.io/api/games?name=`+name +`&key=b3be65e7205e49e8946934e7e1953920&page_size=100`);\r\n    const allVideogames=infoApi.data.results;\r\n    const infoApiId =allVideogames.map(elem => axios.get(`https://api.rawg.io/api/games?name=`+name + `${elem.name}&key=b3be65e7205e49e8946934e7e1953920`));\r\n    const infoApiAll =await axios.all(infoApiId);\r\n    const infoApiresponses =infoApiAll.map(response=>{\r\n        const {id, name, description, background_image, rating, released}=response.data;\r\n        /*const platforms = (response.data.platforms?.map(platform=>platform.platform.name)).join(\", \");\r\n        const genres = (response.data.genres?.map(genre=>genre.name)).join(\", \");*/\r\n        return {\r\n            id,\r\n            name, \r\n            background_image, \r\n            description:description.replaceAll(/<[^>]+>/g, \" \"),\r\n            genres:genres,\r\n            platforms:platforms,\r\n            rating,\r\n            released\r\n        };\r\n    });\r\n    dispatch({type:GET_NAME_VIDEOGAMES, payload:infoApiresponses});\r\n    }    catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n    \r\n}\r\nexport const orderByName=(payload)=>{\r\n    return {\r\n        type:ORDER_BY_NAME,\r\n        payload\r\n    }\r\n}\r\nexport const filterByStatus=(payload)=>{\r\nreturn {\r\n    type:FILTER_BY_STATUS,\r\n    payload\r\n}\r\n}\r\nexport const filterCreated=(payload)=>{\r\n    return {\r\n        type:FILTER_CREATED,\r\n        payload\r\n    }\r\n    }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}